c
goto(sl, alpha)
alpha
sl
c
alpha
sl
c
stack.map{|s| s}
stack.map{|s| puts s}
sl
beta
alpha
stack
c
C
@syntactic_table['36']['LV']
@grammar['5']
@syntactic_table['51']['id']
@syntactic_table['36']['PT_V']
@syntactic_table['18']['TIPO']
@grammar['8']
@syntactic_table['39']['PT_V']
@syntactic_table['18']['lit']
@syntactic_table['4']['id']
@syntactic_table['2']['varinicio']
@syntactic_table['0']['inicio']
@token_array.map{|t| puts t['token']}
c
alpha
sl
stack
sl
a
c
@token_array.map{|t| puts t['token']}
c
alpha
sl
@token_array.count
@token_array
c
exit
@current_index
ip
alpha
sl
c
goto(sl, alpha)
alpha
sl
c
stack
ip
esse = s
a
s
a
c
beta_length
beta
stack.last
c
goto(sl, alpha)
beta
alpha
sl
c
alpha
sl
@token_array
c
@token_array
c
esse
esse = s
a
sl
a + s
s
a
stack
exit
@current_state
@token_array
c
@token_array
c
@token_array
c
@token_array
@buffer
@token_array
@buffer
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
puts @symbol_table
@symbol_table
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
@current_character
@current_state
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
c
@token_array
exit
@token_array
c
@token_array
c
@token_array
exit
@token_array
c
@token_array
c
@token_array
exit
c
@token_array
@token_array.pop
@token_array << token
@token_array
token
c
exit
c
state
c
@buffer
